<!DOCTYPE html>
<html>
<head>
    <title>CELOE</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <meta name="viewport" content="user-scalable=no, initial-scale=0.5, width=device-width, viewport-fit=cover" />
    <meta name="description" content="CELOE Blog with Virtual Tour"/>
    <link rel="preload" href="script.js?v=1746684316471" as="script"/>
<link rel="preload" href="media/panorama_A68D892E_ADE2_F792_41E2_7F9CB0696A85_0/l/2/0_0.jpg?v=1746684316471" as="image"/>
<link rel="preload" href="media/panorama_A68D892E_ADE2_F792_41E2_7F9CB0696A85_0/r/2/0_0.jpg?v=1746684316471" as="image"/>
<link rel="preload" href="media/panorama_A68D892E_ADE2_F792_41E2_7F9CB0696A85_0/u/2/0_0.jpg?v=1746684316471" as="image"/>
<link rel="preload" href="media/panorama_A68D892E_ADE2_F792_41E2_7F9CB0696A85_0/d/2/0_0.jpg?v=1746684316471" as="image"/>
<link rel="preload" href="media/panorama_A68D892E_ADE2_F792_41E2_7F9CB0696A85_0/f/2/0_0.jpg?v=1746684316471" as="image"/>
<link rel="preload" href="media/panorama_A68D892E_ADE2_F792_41E2_7F9CB0696A85_0/b/2/0_0.jpg?v=1746684316471" as="image"/>
<script>(function(i,s,o,g,r,a,m){i["GoogleAnalyticsObject"]=r;i[r]=i[r]||function(){(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)})(window,document,"script","//www.google-analytics.com/analytics.js","ga");ga("create", "UA-116087-3", "auto"); ga("send", "pageview");</script>
<meta name="theme-color" content="#FFFFFF"/>
    <script src="lib/tdvplayer.js?v=1746684316471"></script>
    <script type="text/javascript">
        var player;
        var playersPlayingTmp = [];
        var isInitialized = false;
        var isPaused = false;

        function loadTour()
        {
            if(player)
                return;

            var beginFunc = function(event){
                if(event.name == 'begin')
                {
                    var camera = event.data.source.get('camera');
                    if(camera && camera.get('initialSequence') && camera.get('initialSequence').get('movements').length > 0)
                        return;
                }

                if(event.sourceClassName == "MediaAudio")
                    return;

                isInitialized = true;

                player.unbind('preloadMediaShow', beginFunc, player, true);
                player.unbindOnObjectsOf('PanoramaPlayListItem', 'begin', beginFunc, player, true);
                player.unbind('stateChange', beginFunc, player, true);
                window.parent.postMessage("tourLoaded", '*');

                disposePreloader();

                onVirtualTourLoaded();
            };

            var settings = new TDV.PlayerSettings();
            
            settings.set(TDV.PlayerSettings.CONTAINER, document.getElementById('viewer'));
            settings.set(TDV.PlayerSettings.SCRIPT_URL, 'script.js?v=1746684316471');
            settings.set(TDV.PlayerSettings.WEBVR_POLYFILL_URL, 'lib/WebVRPolyfill.js?v=1746684316471');
            settings.set(TDV.PlayerSettings.HLS_URL, 'lib/Hls.js?v=1746684316471');
            settings.set(TDV.PlayerSettings.QUERY_STRING_PARAMETERS, 'v=1746684316471');
            window.tdvplayer = player = TDV.PlayerAPI.create(settings);
            player.bind('preloadMediaShow', beginFunc, player, true);
            player.bind('stateChange', beginFunc, player, true);
            player.bindOnObjectsOf('PanoramaPlayListItem', 'begin', beginFunc, player, true);
            player.bindOnObject('rootPlayer', 'start', function(e){
                var queryDict = {}; location.search.substr(1).split("&").forEach(function(item) {var k = item.split("=")[0], v = decodeURIComponent(item.split("=")[1]);queryDict[k] = v});
                var item = undefined;
                if("media-index" in queryDict){
                    item = setMediaByIndex(parseInt(queryDict["media-index"]) - 1);
                }
                else if("media-name" in queryDict){
                    item = setMediaByName(queryDict["media-name"]);
                }
                else{
                    item = setMediaByIndex(0);
                }
                if(item != undefined && "trigger-overlay-name" in queryDict){
                    triggerOverlayByName(item, queryDict["trigger-overlay-name"], "trigger-overlay-event" in queryDict ? queryDict["trigger-overlay-event"] : "click");
                }

                player.getById('rootPlayer').bind('tourEnded', function(){
                    onVirtualTourEnded();
                }, player, true);
            }, player, false);

            /* Listen messages */
            window.addEventListener('message', function (e) {
                //Listen to messages for make actions to player in the format function:param1,param2
                var action = e.data;
                if (action == 'pauseTour' || action == 'resumeTour') {
                    this[action].apply(this);
                }
            });
        }

        function pauseTour()
        {
            isPaused = true;
            if(!isInitialized)
                return;

            var playLists = player.getByClassName('PlayList');
            for(var i = 0, count = playLists.length; i<count; i++)
            {
                var playList = playLists[i];
                var index = playList.get('selectedIndex');
                if(index != -1)
                {
                    var item = playList.get('items')[index];
                    var itemPlayer = item.get('player');
                    if(itemPlayer && itemPlayer.pause)
                    {
                        playersPlayingTmp.push(itemPlayer);
                        itemPlayer.pause();
                    }
                }
            }

            player.getById('pauseGlobalAudios')();
        }

        function resumeTour()
        {
            isPaused = false;
            if(!isInitialized)
                return;

            while(playersPlayingTmp.length)
            {
                var viewer = playersPlayingTmp.pop();
                viewer.play();
            }

            player.getById('resumeGlobalAudios')();
        }

        function onVirtualTourLoaded()
        {
            if(isPaused)
                pauseTour();
        }

        function onVirtualTourEnded()
        {

        }

        function getRootPlayer()
        {
            return window.tdvplayer !== undefined ? window.tdvplayer.getById('rootPlayer') : undefined;
        }

        function setMediaByIndex(index)
        {
            var rootPlayer = getRootPlayer();
            if(rootPlayer !== undefined) {
                return rootPlayer.setMainMediaByIndex(index);
            }
        }

        function setMediaByName(name)
        {
            var rootPlayer = getRootPlayer();
            if(rootPlayer !== undefined) {
                return rootPlayer.setMainMediaByName(name);
            }
        }

        function triggerOverlayByName(item, name, eventName)
        {
            var rootPlayer = getRootPlayer();
            if(rootPlayer !== undefined) {
                item.bind('begin', function(e){
                    item.unbind('begin', arguments.callee, this);
                    var overlay = rootPlayer.getPanoramaOverlayByName(item.get('media'), name);
                    if(overlay)
                        rootPlayer.triggerOverlay(overlay, eventName);
                }, rootPlayer);
            }
        }

        function showPreloader()
        {
            var preloadContainer = document.getElementById('preloadContainer');
            if(preloadContainer != undefined)
                preloadContainer.style.opacity = 1;
        }

        function disposePreloader()
        {
            var preloadContainer = document.getElementById('preloadContainer');
            if(preloadContainer == undefined)
                return;

            var transitionEndName = transitionEndEventName();
            if(transitionEndName)
            {
                preloadContainer.addEventListener(transitionEndName, hide, false);
                preloadContainer.style.opacity = 0;
                setTimeout(hide, 500); //Force hide. Some cases the transitionend event isn't dispatched with an iFrame.
            }
            else
            {
                hide();
            }

            function hide()
            {
                
                preloadContainer.style.visibility = 'hidden';
                preloadContainer.style.display = 'none';
            }

            function transitionEndEventName () {
                var el = document.createElement('div');
                var transitions = {
                        'transition':'transitionend',
                        'OTransition':'otransitionend',
                        'MozTransition':'transitionend',
                        'WebkitTransition':'webkitTransitionEnd'
                    };

                var t;
                for (t in transitions) {
                    if (el.style[t] !== undefined) {
                        return transitions[t];
                    }
                }

                return undefined;
            }
        }

        function onBodyClick(){
            document.body.removeEventListener("click", onBodyClick);
            document.body.removeEventListener("touchend", onBodyClick);
            loadTour();
        }

        function onLoad() {
            if (/AppleWebKit/.test(navigator.userAgent) && /Mobile\/\w+/.test(navigator.userAgent))
            {
                var inIFrame = false;
                try
                {
                    inIFrame = (window.self !== window.top);
                }
                catch (e)
                {
                    inIFrame = true;
                }

            }


            if (isOVRWeb()){
                showPreloader();
                loadTour();
                return;
            }

            showPreloader();
loadTour()
        }

        function playVideo(video) {
            function isSafariDesktopV11orGreater() {
                return /^((?!chrome|android|crios|ipad|iphone).)*safari/i.test(navigator.userAgent) && parseFloat(/Version\/([0-9]+\.[0-9]+)/i.exec(navigator.userAgent)[1]) >= 11;
            }

            function detectUserAction() {
                var onVideoClick = function(e) {
                    if(video.paused) {
                        video.play();
                    }
                    video.muted = false;
                    e.stopPropagation();
                    e.stopImmediatePropagation();
                    e.preventDefault();
                    video.removeEventListener('click', onVideoClick);
                    video.removeEventListener('touchend', onVideoClick);
                };
                video.addEventListener("click", onVideoClick);
                video.addEventListener("touchend", onVideoClick);
            }

            if (isSafariDesktopV11orGreater()) {
                video.muted = true;
                video.play();
            } else {
                var canPlay = true;
                var promise = video.play();
                if (promise) {
                    promise.catch(function() {
                        video.muted = true;
                        video.play();
                        detectUserAction();
                    });
                } else {
                    canPlay = false;
                }

                if (!canPlay || video.muted) {
                    detectUserAction();
                }
            }
        }

        function isOVRWeb(){
            return window.location.hash.substring(1).split('&').indexOf('ovrweb') > -1;
        }
    </script>
    <!-- Ganti bagian CSS berikut -->
<style type="text/css">
    html, body {
        width: 100%;
        margin: 0;
        padding: 0;
        font-family: Arial, sans-serif;
        background-color: #f4f4f4;
        color: #333;
    }

    #viewer {
        background-color: #000;
        z-index: 1;
        position: relative;
        width: 100%;
        height: 500px;
        border: 2px solid #333; /* Added border to define the black box */
        box-sizing: border-box; /* Ensures padding and border are included in the element's dimensions */
    }

    header {
        background: #333;
        color: #fff;
        padding: 20px 0;
        min-height: 100px;
        border-bottom: #0779e4 3px solid;
        display: flex;
        align-items: center;
        justify-content: space-between;
    }

    .container {
        width: 80%;
        margin: auto;
    }

    header h1 {
        margin: 0;
        font-size: 24px;
    }

    header nav {
        display: flex;
        gap: 15px;
    }

    header a {
        color: #fff;
        text-decoration: none;
        text-transform: uppercase;
        font-size: 14px;
    }

    #main-content {
        margin-top: 20px;
    }

    .post {
        background: #fff;
        margin: 20px 0;
        padding: 20px;
        border: 1px solid #ddd;
        border-radius: 5px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }

    .post h2 {
        margin-top: 0;
        font-size: 20px;
    }

    .post p {
        line-height: 1.5;
        margin: 10px 0;
    }

    button {
        background-color: #0779e4;
        color: #fff;
        border: none;
        padding: 10px 15px;
        border-radius: 5px;
        cursor: pointer;
        font-size: 14px;
    }

    button:hover {
        background-color: #055bb5;
    }
</style>

    
</head>
<body>
    <header>
        <div class="container">
            <h1>CELOE</h1>
            <nav>
                <a href="#">Home</a> |
                <a href="#virtual-tour">Virtual Tour</a> |
                <a href="#about">About</a>
            </nav>
        </div>
    </header>

    <div class="container" id="main-content">
        <div class="post">
            <h2>Welcome to CELOE</h2>
            <p>Explore our blog and take a virtual tour to experience our content in an immersive way.</p>
        </div>

        <div class="post" id="virtual-tour">
            <h2>Virtual Tour</h2>
            <p>Click below to start the virtual tour:</p>
            <button onclick="startTour()">Start Virtual Tour</button>
            <script>
                function startTour() {
                    showPreloader(); // kalau mau efek loading
                    loadTour();      // mulai player
                }
                </script>
            <div id="viewer" style="width: 100%; height: 500px; background-color: #000;"></div>
        </div>

        <div class="post" id="about">
            <h2>About CELOE</h2>
            <p>CELOE is a platform that combines blogging with immersive virtual tours to provide a unique user experience.</p>
        </div>
    </div>
</body>
</html>